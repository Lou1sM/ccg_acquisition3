chiltag_to_node_types = {
                    'adj': 'adj',
                    'adv': 'adv',
                    'adv:int': 'adv',
                    'adv:tem': 'adv',
                    'aux': 'aux',
                    'conj': 'connect',
                    'coord': 'connect',
                    'cop': 'cop',
                    'det': 'quant',
                    'det:art': 'quant',
                    'det:dem': 'quant',
                    'det:int': 'quant',
                    'det:num': 'quant',
                    'det:poss': 'quant',
                    #'meta':set([None]),
                    'mod': 'raise',
                    'mod:aux': 'quant',
                    'n': 'noun',
                    'n:pt': 'noun',
                    'n:gerund': 'entity',
                    'n:let': 'entity',
                    'n:prop': 'entity',
                    'neg': 'neg',
                    #'on':set([None]),
                    #'part':set([None]),
                    #'poss':set([None]),
                    'prep': 'prep',
                    'pro:dem': 'entity',
                    #'pro:exist':set(['NP']),
                    'pro:indef': 'entity',
                    'pro:int': 'WH',
                    'pro:obj': 'entity',
                    'pro:per': 'entity',
                    'pro:poss': 'quant',
                    'pro:refl': 'entity',
                    'pro:sub': 'entity',
                    'qn': 'quant',
                    'v': 'verb',
                    #'v:obj':set([None]),
                    }

pos_marking_dict = {
                    'adj':set(['N|N']),
                    'adv':set(['S|S','(S|NP)|(S|NP)|(S|NP|NP)|(S|NP|NP)']),
                    'adv:int':set([None]),
                    'adv:tem':set([None]),
                    'aux':set([None]),
                    'chi':set([None]),
                    #'co':set(['S']),
                    'co':set([None]),
                    'conj':set(['S|S|S','NP|NP|NP','N|N|N','(S|NP)|(S|NP)|(S|NP)']), # don't have schemas yet]), minimal list for now
                    'coord':set(['S|S|S','NP|NP|NP','N|N|N','(S|NP)|(S|NP)|(S|NP)']), # same as above ok for now?
                    'cop':set(['S|S','X']),
                    'det':set(['NP|N']),
                    'det:art':set(['NP|N']),
                    'det:dem':set(['NP|N']),
                    'det:int':set(['NP']),
                    'det:num':set(['NP|N']),
                    'det:poss':set(['NP|N']),
                    'meta':set([None]),
                    'mod':set(['S|NP|(S|NP)','S|(S|NP)|NP','S|NP|(S|NP)','S|(S|NP)|NP']),
                    'mod:aux':set([None]),
                    'n':set(['N']),
                    'n:gerund':set(['NP']),
                    'n:let':set(['NP']),
                    'n:prop':set(['NP']),
                    'n:pt':set(['N']), # seems to be for nouns with plural morph.]), like scissors
                    #'neg':set(['S|S','(S|NP)|(S|NP)','(S|NP|NP)|(S|NP|NP)']), # ?
                    'on':set([None]),
                    'part':set([None]),
                    'poss':set([None]),
                    'post':set(['S|S']), # ?
                    'prep':set(['S|NP|NP', 'S|S|NP','NP|NP|NP','S|NP']),
                    'pro:dem':set(['NP']), # ?
                    'pro:exist':set(['NP']),
                    'pro:indef':set(['NP']),
                    'pro:int':set(['NP']),
                    'pro:obj':set(['NP']),
                    'pro:per':set(['NP']),
                    'pro:poss':set(['NP']),
                    'pro:refl':set(['NP']),
                    'pro:rel':set(['NP']),
                    'pro:sub':set(['NP']),
                    'qn':set(['NP|N']),
                    'sing':set([None]),
                    'v':set(['S|NP','S|NP|NP']),
                    #'v:obj':set([None]),
                    'wplay':set([None]),
                    }
pos_marking_dict['neg'] = set([f'({x})|({x})' for x in pos_marking_dict['v']] +[f'({x})|({x})' for x in pos_marking_dict['mod']] )

pos_marking_dict = {k:set(['X']) if v == set([None]) else v for k,v in pos_marking_dict.items()}


base_lexicon = {k:set(['NP']) for k in ('you','i','me','he','she','it','WHAT','WHO')}
base_lexicon['equals'] = set(['S|NP|NP'])
base_lexicon['hasproperty'] = set(['S|NP|(N|N)'])
base_lexicon['mod|will_2'] = set(['S|NP', 'S|NP|NP'])
base_lexicon['not'] = set(['X'])

gt_word2lfs = [
        ("'ll", 'lambda $0.lambda $1.mod|~will ($0 $1)'),
        ("'re", 'lambda $0.lambda $1.v|hasproperty $1 $0'),
        ("'s", 'lambda $0.lambda $1.v|equals $1 $0'),
        ('Adam', 'n:prop|adam'),
        ('I', 'pro:sub|i'),
        ('a', 'lambda $0.det:art|a $0'),
        ('an', 'lambda $0.det:art|a $0'),
        ('another', 'lambda $0.qn|another $0'),
        ('are', 'lambda $0.lambda $1.Q (v|equals $0 $1)'),
        ('break', 'lambda $0.lambda $1.v|break $1 $0'),
        ('can', 'lambda $0.lambda $1.Q (mod|can ($1 $0))'),
        ('d', 'lambda $0.lambda $1.Q (mod|do ($0 $1))'),
        ('did', 'lambda $0.lambda $1.Q (mod|do-past ($0 $1))'),
        ('do', 'lambda $0.lambda $1.v|do $1 $0'),
        ('does', 'lambda $0.lambda $1.Q (mod|do-3s ($1 $0))'),
        ('dropped', 'lambda $0.lambda $1.v|drop-past $1 $0'),
        ('have', 'lambda $0.lambda $1.v|have $1 $0'),
        ('he', 'pro:sub|he'),
        ('his', 'lambda $0.det:poss|his $0'),
        ('hurt', 'lambda $0.lambda $1.v|hurt-zero $1 $0'),
        ('in', 'lambda $0.prep|in $0'),
        ('is', 'lambda $0.lambda $1.Q (v|equals $0 $1)'),
        ('it', 'pro:per|it'),
        ('like', 'lambda $0.lambda $1.v|like $1 $0'),
        ('lost', 'lambda $0.lambda $1.v|lose-past $1 $0'),
        ('may', 'lambda $0.lambda $1.mod|may ($0 $1)'),
        ('missed', 'lambda $0.v|miss-past $0'),
        ('my', 'lambda $0.det:poss|my $0'),
        ('name', 'n|name'),
        ('need', 'lambda $0.lambda $1.v|need $1 $0'),
        ('no', 'lambda $0.qn|no $0'),
        ('not', 'lambda $0.lambda $1.not ($0 $1)'),
        ('on', 'lambda $0.prep|on $0'),
        ('one', 'pro:indef|one'),
        ('pencil', 'n|pencil'),
        ('say', 'lambda $0.lambda $1.v|say $1 $0'),
        ('see', 'lambda $0.lambda $1.v|see $1 $0'),
        ('shall', 'lambda $0.lambda $1.Q (mod|shall ($0 $1))'),
        ('some', 'lambda $0.qn|some $0'),
        ('that', 'pro:dem|that'),
        ('the', 'lambda $0.det:art|the $0'),
        ('they', 'pro:sub|they'),
        ('this', 'pro:dem|this'),
        ('those', 'pro:dem|those'),
        ('was', 'lambda $0.lambda $1.Q (v|equals $0 $1)'),
        ('we', 'pro:sub|we'),
        ('what', 'pro:int|WHAT'),
        ('who', 'pro:int|WHO'),
        ('you', 'pro:per|you'),
        ('your', 'lambda $0.det:poss|your $0')]
